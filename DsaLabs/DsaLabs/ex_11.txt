
EXERCISE 11.
Exponentiation via "Bit Shifting".

- The doubly linked list is implemented in the files "LinkedList.h" and "LinkedList.c".
- The tests for the dynamic set operations are implemented in the file "testOperations.c".
- The tests are implemented in the function "testLinkedList()".  






Exercise 11 | Exponentiation via \Bit Shifting"
The computation of n×2k, where n is binary and k is an integer, can be efficiently done by shifting
left k times the binary number n. E.g., if n = 00010111 (decimal 23), n × 22 = 01011100 (decimal
92). Implement the function nPow2(n,k) which computes the following:
• Input: (1) a sequence of 8 bits representing a binary number n, that is, each element of the
input sequence is either a 0 or 1; (2) the exponent k.
• Output: a sequence of 8 bits representing the value of n × 2k.
Implement this function assuming that the input sequence is represented as (a) an array, and (b) a
linked list. What is the running time of the two implementations?