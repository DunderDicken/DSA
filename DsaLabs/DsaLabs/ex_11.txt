
EXERCISE 11.
Exponentiation via "Bit Shifting".

- The bit shifting functions are implemented in the files "nPow2.h" and "nPow2.c".
- The tests for the functions are implemented in the file "testOperations.c".
- The tests are implemented in the function "test_nPow2()".  

The test function "test_nPow2()" is dependent on the defined values:
NUM_OF_BITS - This defines how many "bits" will be in the list and array for test_nPow2().
NUM_OF_LEFTSHIFT - This defines how many times the functions shifts elements left in test_nPow2().

The test also uses the function "calc_expected_value()" to calculate the correct integer value 
after nPow2(). This value is used for the simple error check.

The test is divided by comments into a) and b), and tests both input as an array and as an list.
It prints the list and the array before and after the nPow2() function is called, the output also
displays the integer value of the binary representation.

//// Running Time //////
a)	Input is an array
	The nPow2() function goes through all the element in the array for
	every k integer value, so if k = 2, it goes through all elements 2 
	times. It also moves every element.

	If n = number of elements, then the running time will be in the magnitude
	of (n * k).

b)	Input is a list.
	The runnting time of nPow2() with a list only depends on the value of k,
	the number of elements in the list makes no difference. This is better
	than in a).
